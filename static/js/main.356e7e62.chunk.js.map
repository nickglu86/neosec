{"version":3,"sources":["Components/UsersList.js","Components/Event.js","Components/TimelineHeader.js","Components/EventsTimeline.js","Components/View.js","App.js","index.js"],"names":["UsersList","users","setUserToShow","Meta","Card","Title","Typography","cardStyle","maxWidth","marginTop","cursor","level","style","width","margin","textAlign","display","flexDirection","alignItems","map","user","index","onClick","avatar","src","title","description","Event","event","changeEventsView","mainEvent","setFocusedEvent","id","timestamp","method","endpoint_path","focusedEventClass","focusEventLabel","day","slice","month","parseInt","className","getDate","toLowerCase","TimelineHeader","userID","arrowClick","type","UpOutlined","DownOutlined","EventsTimeline","userEvents","getNewEventsArr","firstEventI","lastEventI","useState","amountOfEventToDisplay","eventsToDisplay","setEventsToDisplay","mainEventID","setMainevent","focusedEvent","newFirstEventIndex","NewEventsArr","updateEventsToView","mainEventIndex","isEventEndList","length","isEventMiddleList","checkPosFocusEvent","indexOf","direction","currentFocusEventIndex","View","data","setdata","setUsers","view","setView","userToRender","setUserToRender","useEffect","fetch","then","response","json","myJson","user_id","filter","value","userid","Header","Layout","Footer","Content","App","minHeight","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.356e7e62.chunk.js","sourcesContent":["import 'antd/dist/antd.css'; \r\nimport { Card, Avatar, Typography } from 'antd';\r\n\r\nconst UsersList  = ({users, setUserToShow}) => {\r\n    const { Meta } = Card;\r\n    const { Title } = Typography;\r\n    const titleStyle  ={ width: 'auto', margin : 20 , textAlign : 'center'};\r\n    const userListStyle  = { display : 'flex', flexDirection : 'column' , alignItems : \"center\"};\r\n    const cardStyle  =  { maxWidth: 500 , marginTop: 16 , cursor : \"pointer\"};\r\n  \r\n   \r\n    return (\r\n        <>\r\n        <Title \r\n             level={3}\r\n             style={titleStyle}\r\n             >\r\n             Users List\r\n       </Title>\r\n       <div style={userListStyle}>\r\n         {users.map(  (user, index) =>{\r\n           return (\r\n             <Card \r\n                    style={cardStyle}\r\n                    onClick={() => setUserToShow(user)}\r\n                    key={index}\r\n                    >\r\n               <Meta\r\n                 avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                 title=\"User ID\"\r\n                 description={user}\r\n               />\r\n                \r\n             </Card>\r\n           )\r\n         })}\r\n       </div>\r\n\r\n     </>\r\n\r\n      );\r\n}\r\n\r\nexport default UsersList;","import {  Tag } from 'antd';\r\n\r\nconst Event = ({ event, changeEventsView, mainEvent , setFocusedEvent }) => {\r\n    const {id, timestamp, method, endpoint_path} = event;\r\n    const focusedEventClass =  id === mainEvent ? 'focused-event' : '';\r\n    const getDate = () => {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const day = timestamp.slice(8,10) - 0;\r\n        const month = monthNames[parseInt(timestamp.slice(5,7))-1];\r\n        return <div className=\"focus-event\">{day} {month}</div>;\r\n    }\r\n\r\n    const focusEventLabel = focusedEventClass ==='focused-event' ? getDate() : '';\r\n    if(focusedEventClass ==='focused-event'){ \r\n        setFocusedEvent(event);\r\n    }\r\n\r\n    return (  \r\n        <>\r\n            <div  \r\n                    onClick={() => changeEventsView(event)}\r\n                    className={`event ${focusedEventClass}`}\r\n                >\r\n                <span className=\"timestamp\"> {timestamp.slice(10,23)}</span>\r\n                <div  className=\"circle\">\r\n                    <div></div>   \r\n                </div>\r\n                <div className={`method ${method.toLowerCase()}`}>\r\n                <Tag>{method}</Tag>\r\n                </div>\r\n                <span className=\"path\">{endpoint_path}</span>\r\n            </div>\r\n            {focusEventLabel}\r\n        </>\r\n     );\r\n}\r\n\r\nexport default Event;","import { Button, Switch } from 'antd';\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\r\n\r\nconst TimelineHeader = ({userID, arrowClick}) => {\r\n\r\n    return (  \r\n        <div className=\"timeline-header\">\r\n             <h2>{userID}</h2>\r\n             <div className=\"timeline-top\">\r\n                 <h3>Timeline</h3>\r\n                 <Button type=\"primary\" >Go To Query</Button>\r\n             </div> \r\n             <div className=\"timeline-bottom\">\r\n                <div  className=\"arrows\">           \r\n                   <UpOutlined onClick={() => arrowClick('up')} />\r\n                    <DownOutlined  onClick={() => arrowClick('down')}/>\r\n                </div>\r\n                <div>\r\n                    <Switch /> \r\n                    <span>Alerts Only</span>\r\n                </div>\r\n\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimelineHeader;","import { useState } from \"react\";\r\nimport Event from \"./Event\";\r\nimport DropDown from \"./DropDown\";\r\nimport TimelineHeader from \"./TimelineHeader\";\r\n\r\nconst EventsTimeline = ({userID, userEvents }) => {    \r\n    const getNewEventsArr = (firstEventI, lastEventI) =>{\r\n        return userEvents.slice(firstEventI, lastEventI);\r\n    }\r\n    \r\n    let [amountOfEventToDisplay, setamountOfEventToDisplay] = useState(10);\r\n    const [eventsToDisplay, setEventsToDisplay] = useState(getNewEventsArr(0, amountOfEventToDisplay));\r\n    const [mainEventID, setMainevent] = useState(userEvents[amountOfEventToDisplay/2 - 1].id)\r\n    const [focusedEvent, setFocusedEvent] = useState({});\r\n    \r\n    const updateEventsToView = (newFirstEventIndex) => {\r\n        const NewEventsArr = getNewEventsArr(newFirstEventIndex, newFirstEventIndex + amountOfEventToDisplay);\r\n        setEventsToDisplay([...NewEventsArr]);\r\n    }\r\n \r\n\r\n    const checkPosFocusEvent = (mainEventIndex) =>{\r\n        const isEventEndList = mainEventIndex >   userEvents.length - ( amountOfEventToDisplay/2 + 1)\r\n        const isEventMiddleList = mainEventIndex > amountOfEventToDisplay/2 - 1;\r\n\r\n        return  isEventEndList ? userEvents.length - amountOfEventToDisplay \r\n              : isEventMiddleList ? mainEventIndex  - (amountOfEventToDisplay/2 - 1)  \r\n              : 0;    \r\n    }\r\n\r\n    const changeEventsView = (event) => {\r\n        setMainevent(event.id);\r\n        let posFocusEvent =  checkPosFocusEvent(userEvents.indexOf(event))\r\n        updateEventsToView(posFocusEvent);\r\n    }\r\n    const arrowClick = direction => {\r\n        let currentFocusEventIndex =  eventsToDisplay.indexOf(focusedEvent);\r\n        if(direction ===  'up' && currentFocusEventIndex !== 0){\r\n            changeEventsView(eventsToDisplay[currentFocusEventIndex - 1])\r\n        } else if(direction ===  'down' && userEvents.indexOf(focusedEvent) !== userEvents.length -1){\r\n            changeEventsView(eventsToDisplay[currentFocusEventIndex + 1])\r\n        }\r\n        \r\n    }\r\n\r\n    return (  \r\n        <div className=\"timeline\">\r\n            <TimelineHeader userID={userID} arrowClick={arrowClick}/>\r\n            <div className=\"events-list\">\r\n                { eventsToDisplay.map((event, index) => {\r\n                    return (\r\n                        <Event\r\n                            key={index} \r\n                            event={event} \r\n                            changeEventsView={changeEventsView}\r\n                            mainEvent={mainEventID}\r\n                            setFocusedEvent={setFocusedEvent}\r\n                        />\r\n                    ) ;\r\n                })}\r\n            </div>\r\n            {/* <DropDown setEventsToShow={setamountOfEventToDisplay} amountOfEventToDisplay={amountOfEventToDisplay} />\r\n       */}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default EventsTimeline;","import { useState, useEffect } from \"react\";\r\nimport UsersList from \"./UsersList\";\r\nimport EventsTimeline from \"./EventsTimeline\";\r\n\r\nconst View = () => {\r\n\r\n  const [data, setdata] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [view, setView] = useState('users-list');\r\n  const [userToRender, setUserToRender] = useState(0);\r\n  const initData = () => {\r\n    fetch('./data-set.json')\r\n      .then(function(response){\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        setdata(myJson);\r\n        let users = myJson.map( event => event.user_id)\r\n        setUsers(users.filter((value,index) => users.indexOf(value) === index));\r\n      });\r\n  }\r\n\r\n  const setUserToShow = userid =>{\r\n    setUserToRender(userid);\r\n    setView('user-timeline');\r\n  }\r\n\r\n  useEffect(() => {\r\n    initData();\r\n  }, [])\r\n \r\n  return ( \r\n    <main>\r\n       {view === 'users-list' && (\r\n           <UsersList \r\n              users={users} \r\n              setUserToShow={setUserToShow}\r\n            />\r\n       )}\r\n       {view === 'user-timeline' && (\r\n          <EventsTimeline  \r\n              userID={userToRender}\r\n              userEvents={data}\r\n               />\r\n       )}\r\n    </main>\r\n   );\r\n}\r\n\r\nexport default View;","import './App.css';\r\nimport { Layout } from 'antd';\r\nimport View from './Components/View';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n          <Layout style={{minHeight : '100vh'}}>\r\n            <Header>\r\n              <h1 style={{color : 'white'}}>Neosec  APP</h1>  \r\n            </Header>\r\n            <Content>\r\n                <View />\r\n            </Content>\r\n            <Footer></Footer>\r\n          </Layout> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}